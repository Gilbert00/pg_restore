#!/bin/bash
#
# v 0.2.2
#
#TO-DO: backup exists on two nodes

#set -x

Err="***Error***:"

if [[ $# -lt 4 ]]; then
	echo "Usage: pg_restore_internal <server_from> <server_to> <server_media> <backup> <rename_directory>?"
	exit 1
fi

echo "$1"
SrvFrom="$1"
SrvTo=$2
SrvMedia=$3
gBckp=$4

if [[ $# -eq 4 ]] || [[ -z $5 ]]; then
  DirRnm=""
else
	DirRnm="/$5/"
fi

#DirLog="/usr/openv/netbackup/logs/user_ops/"
DirLog="/root/pg_rest/"
DirInFile=$DirLog
DirRnmFile=$DirLog

LogFile="${DirLog}pg_restore_$$.log"
[[ -f $LogFile ]] && rm -f $LogFile

InFile="pg_restore_$$.in"

SleepSec=10

function split_numb() {
# Numb
	
	local Numb=$1
	local L=${#Numb}
	local Ln=$((-L))
	
	local S=""
	local i
	for (( i=-1; i>=Ln; i-- ))
	do
		S="${Numb:(i):1}$S"
		[[ $i -gt $Ln ]] && [[ $((i%3)) -eq 0 ]] && S=",$S"
	done

	echo $S
}

function check_server() {
# Srv

	local Srv=$1
#	echo "Srv:|${Srv}|"	#Test
	local TestClient="/usr/openv/netbackup/bin/admincmd/bptestbpcd -client"
	echo $Srv
	$TestClient $Srv
	if [ $? -gt 0 ]; then
		echo "${Err}NB client isn't on $Srv !"
		exit 2
  fi
}

function check_media() {
# $SrvMedia

	local Srv=$1
	local N=$(/usr/openv/netbackup/bin/admincmd/nbemmcmd -listhosts -nbservers -parsable | grep -c $Srv)
	if [[ $N -eq 0 ]]; then
		echo "${Err}$Srv isn't media server!"
		exit 4
	fi
	
	N=$(/usr/openv/netbackup/bin/admincmd/nbemmcmd -listhosts -nbservers -parsable | grep $Srv | awk '{print $9}')
	if [[ $N -ne 12 ]] && [[ $N -ne 14 ]]; then
		echo "${Err}$Srv isn't active media server!"
		exit 4
	fi	
}

function get_server_from_bkp() {
# $gBckp
	echo $1 | awk -F_ '{print $2}'
}

function get_first() {
# $SrvFrom
	# if [[ $# -gt 1 ]]; then
		# echo "${Err}Many Servers from!"
		# exit 7
	# fi
	echo $1
}

function check_backup() {
# $SrvFrom $gBckp

	local N=$(/usr/openv/netbackup/bin/bplist -C $1 -t 0 -R /pg_backup | grep -c $2)
	if [[ $N -eq 0 ]]; then
		echo "${Err}Backup $2 don't exists!"
		exit 5
	fi
}

function set_server_in_config() {
# $SrvTo $SrvMedia
	local FileConfig="/tmp/pg_restore_config_$$.tmp"
	bpgetconfig -M $1 | grep -e "^SERVER[[:space:]]*=" > $FileConfig
	echo "SERVER = $2" >> $FileConfig 
	cat $FileConfig | bpsetconfig -h $1
	sleep $SleepSec
}

function check_media_in_clent() {
# $SrvTo $SrvMedia
  local N=$(/usr/openv/netbackup/bin/admincmd/bpgetconfig -M $1 | grep SERVER | grep -c  $2)
	if [[ $N -eq 0 ]]; then
		set_server_in_config $1 $2		
		echo "Server $2 has been added into clients $1 bp.conf !"
#		echo "${Err}Server $2 don't exists in clients $1 bp.conf !"
#		exit 6
	fi	
}

function check_altnames() {

	AltFile="/usr/openv/netbackup/db/altnames/$SrvTo"
	if [[ -f $AltFile  ]] && [[ $(grep -c "$SrvFrom" $AltFile) -gt 0 ]]; then
		:
	else
		echo "$SrvFrom" >> $AltFile
	fi
}
#---

function get_bk_date() {
# $Bk

	local Bk=$1
	local DtStr=$(echo $Bk | awk -F_ '{print $NF}')
	local Dt=$(echo "$DtStr" | sed -n 's/\([[:digit:]]\+\)\.\([[:digit:]]\+\)\.\([[:digit:]]\+\)-\([[:digit:]]\+\)\.\([[:digit:]]\+\)/\2\/\1\/\3 \4\5/p')
	local DtUx=$(date -d "$Dt" +%s)
	echo "$DtUx"
}
#---

function get_bk_len() {
# "$SrvFromOne" $gBckp
	local Srv=$1
	local aBckpDt=($(echo $2 | awk -F_ '{print $NF}' | awk -F- '{print $1,$2}'))
#	echo ${aBckpDt[@]}
	local aBkDay=($(echo ${aBckpDt[0]} | awk -F. '{print $1,$2,$3}' ))
#	echo ${aBkDay[@]}
	local Day=$(echo "${aBkDay[1]}/${aBkDay[0]}/${aBkDay[2]}")
	local Tm=$(echo ${aBckpDt[1]} | tr "." ":") 
	local BkUxDt=$(date -d "$Day $Tm" +%s)
	
	echo $(bpimagelist -client $Srv -hoursago 192 | egrep "^IMAGE" |grep -i "User-Full" | awk '{if($14>=ChkDt) print $14,$19}' ChkDt=$BkUxDt | sort -k1 | sed -n '1p' | awk '{print $2}')
}
#---

function get_bk_last_len() {
# $Srv
	echo $(/usr/openv/netbackup/bin/admincmd/bpimagelist -client $1 -hoursago 192 | egrep "^IMAGE" |grep -i "User-Full" | awk '{print $14,$19}' | sort -r -k1 | sed -n '1p' | awk '{print $2}')
}
#---

function get_last_bckp() {
# $SrvFrom
	local Srv
	local Bk
#	local FileErr="/tmp/pg_restore_internal.err"
#	echo "1:$1|"	#Test`
	local DtMax=0
	local SrvMax
	local BkMax
	local DtBk
	
	for Srv in $1
	do
#		echo "Srv:|${Srv}|"	#Test
		check_server $Srv

		Bk=$(/usr/openv/netbackup/bin/bplist -C $Srv -F -t 0 -R "/" 2>/dev/null | sed 's/[[:cntrl:]]$//' | grep pg_backup | sed -n '1p' | awk -F/ '{print $3}')
		if [[ ! -z $Bk ]]; then
#			echo "Bk:$Bk"    #Test
			DtBk=$(get_bk_date $Bk)
			if [[ $DtBk -gt $DtMax ]]; then
				DtMax=$DtBk
				BkMax=$Bk
				SrvMax=$Srv
			fi
		fi
	done

	if [[ $DtMax -gt 0 ]]; then
		SrvFromOne=$SrvMax
		gBckp=$BkMax
		BkLenKb=$(get_bk_last_len $SrvMax)
		BkLenKb=$(split_numb "$BkLenKb")
		echo "$gBckp ${BkLenKb}KB"
		return 0	
	else
		return 1
	fi
}

#------------------------
# main

SrvFromOne=""
IsLast=0
ChkBckp=${gBckp,,} # convert to lowercase
if [[ $ChkBckp == 'last' ]]; then
#	set -x	#Test 
	get_last_bckp "$SrvFrom"
	if [ $? -eq 1 ]; then
	    echo "${Err}Base backup of clients $SrvFrom don't exists!"
	    exit 8
	fi

	IsLast=1
		
#	exit	#Test	
else	
#	SrvFromOne=$SrvFrom
#	SrvFromOne=$(get_server_from_bkp $gBckp)
  SrvFromOne=$(get_first $SrvFrom)
	check_server $SrvFromOne
fi

#check_servers_exists

check_server $SrvTo
check_server $SrvMedia

check_media $SrvMedia

if [[ $IsLast -eq 0 ]]; then
    check_backup "$SrvFromOne" $gBckp
		BkLenKb=$(get_bk_len "$SrvFromOne" $gBckp)
		BkLenKb=$(split_numb "$BkLenKb")
		echo "$gBckp ${BkLenKb}KB"
fi

check_media_in_clent $SrvTo $SrvMedia

check_altnames
#---

Srv0=$SrvFromOne
Srv9=$SrvTo
DMS="-disk_media_server $SrvMedia"
f=${DirInFile}$InFile
L=$LogFile
R=""
DT="-s 11/28/2021 00:00:00 -e 11/29/2021 20:00:00"
DT=""


# set $InFile
DirBckp="/pg_backup/"
FullBckp="${DirBckp}$gBckp"

echo "$FullBckp" > $f

# set $RnmFile
if [[ ! -z $DirRnm ]]; then
	RnmFile="${DirRnmFile}pg_rnm_$$.in"
	R="-R $RnmFile"
	echo "change $FullBckp to ${DirRnm}$gBckp" > $RnmFile
fi

# gen CMD
CMD0=/usr/openv/netbackup/bin/bprestore
if [ ! -x $CMD0OD  ]; then
  echo "${Err}$CMD0 don't found !"
  exit 3
fi

echo ""
echo "$(basename $0) PID:$$"
echo ""

CMD="$CMD0 -C $Srv0 -D $Srv9 -f $f -print_jobid -L $L -t 0 $R  $DMS $DT"
echo $CMD
$CMD


